<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="com.jhdx.model.entity.User" table="user" catalog="music">
        <id name="userId" type="java.lang.Integer">
            <column name="userId" />
            <generator class="native" />
        </id>
        <many-to-one name="userstatus" class="com.jhdx.model.entity.Userstatus" fetch="join" lazy="false">
            <column name="userStatusId" />
        </many-to-one>
        <many-to-one name="role" class="com.jhdx.model.entity.Role" fetch="select" lazy="false">
            <column name="roleId" />
        </many-to-one>
        <property name="userName" type="java.lang.String">
            <column name="userName" length="50" />
        </property>
        <property name="userPassword" type="java.lang.String">
            <column name="userPassword" length="50" />
        </property>
        <property name="nickName" type="java.lang.String">
            <column name="nickName" length="50" />
        </property>
        <property name="userIconSrc" type="java.lang.String">
            <column name="userIconSrc" length="500" />
        </property>
        <property name="userReport" type="java.lang.Integer">
            <column name="userReport" />
        </property>
        <property name="userAcode" type="java.lang.String">
            <column name="userAcode" length="50" />
        </property>
        <set name="songlists" inverse="true">
            <key>
                <column name="userId" />
            </key>
            <one-to-many class="com.jhdx.model.entity.Songlist" />
        </set>
        <set name="uploadsongs" inverse="true">
            <key>
                <column name="userId" />
            </key>
            <one-to-many class="com.jhdx.model.entity.Uploadsong" />
        </set>
        <set name="dowloadsongs" inverse="true">
            <key>
                <column name="userId" />
            </key>
            <one-to-many class="com.jhdx.model.entity.Dowloadsong" />
        </set>
    </class>
</hibernate-mapping>
